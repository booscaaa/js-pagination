name: Release and Publish

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm i

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: version_check
        run: |
          CURRENT_VERSION=${{ steps.current_version.outputs.version }}
          if git tag | grep -q "^v${CURRENT_VERSION}$"; then
            echo "Version $CURRENT_VERSION already exists as a tag"
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected: $CURRENT_VERSION"
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Git tag
        if: steps.version_check.outputs.should_release == 'true'
        run: |
          VERSION=${{ steps.current_version.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${VERSION}" -m "Release version ${VERSION}"
          git push origin "v${VERSION}"

      - name: Create GitHub Release
        if: steps.version_check.outputs.should_release == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.current_version.outputs.version }}
          release_name: Release v${{ steps.current_version.outputs.version }}
          body: |
            ## Changes in v${{ steps.current_version.outputs.version }}
            
            ### Features
            - Check the commit history for detailed changes
            
            ### Installation
            ```bash
            npm install js-pagination@${{ steps.current_version.outputs.version }}
            ```
            
            ### Documentation
            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) for usage instructions.
          draft: false
          prerelease: false

      - name: Publish to NPM
        if: steps.version_check.outputs.should_release == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify success
        if: steps.version_check.outputs.should_release == 'true'
        run: |
          echo "‚úÖ Successfully released version ${{ steps.current_version.outputs.version }}"
          echo "üì¶ Package published to NPM"
          echo "üè∑Ô∏è Git tag created: v${{ steps.current_version.outputs.version }}"
          echo "üìã GitHub release created"

      - name: Skip release notification
        if: steps.version_check.outputs.should_release == 'false'
        run: |
          echo "‚ÑπÔ∏è No new version detected, skipping release"
          echo "Current version ${{ steps.current_version.outputs.version }} already exists as a tag"